@using DataLayer;
@model DataLayer.Products

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>ایجاد محصول</h2>
<hr />
<div class="row">
    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.AntiForgeryToken()
        <div class="col-md-8">
            <div class="form-horizontal">
                @if (ViewBag.GroupError == true)
                {
                    <div class="alert alert-danger">
                        <p>
                            لطفا یک گروه را برای محصول مورد نظر انتخاب کنید!
                        </p>
                    </div>
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="control-label col-md-2">کلمات کلیدی</span>
                    <div class="col-md-10">
                        <input type="text" name="tags" class="form-control" placeholder="کلمات کلیدی را با ',' جدا کنید"/>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ثبت محصول" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">تصویر محصول</div>
                <div class="panel-body">
                    <div class="form-group">
                        <img src="~/Areas/Admin/Images/index.png" class="thumbnail" style="margin:8px auto" id="imgPre" />
                        @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" id="ImageUploader" name="ImageUploaders" />
                            @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">گروه محصول</div>
                <div class="panel-body">
                    @{
                        List<Product_Groups> groups = ViewBag.productGroups;

                        <ul>
                            @foreach (var group in groups.Where(g => g.ParentID == null))
                            {
                                <li>
                                    <input type="checkbox" name="selectedGroups" value="@group.GroupID" /> <span>@group.GroupTitle</span>
                                    @if (groups.Any(g => g.ParentID == group.GroupID))
                                    {
                                        <ul>
                                            @foreach (var subGroup in groups.Where(g => g.ParentID == group.GroupID))
                                            {
                                                <li>
                                                    <input type="checkbox" name="selectedGroups" value="@subGroup.GroupID" /> <span>@subGroup.GroupTitle</span>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }
                    @*@{
                            List<Product_Groups> grouplist = ViewBag.productGroups;
                            <ul class="">
                                @foreach (var item in grouplist.Where(a => a.ParentID == null))
                                {

                                    <li>
                                        <input type="checkbox" name="selectgroups" value="@item.GroupID"/><span>@item.GroupTitle</span>
                                        @if (grouplist.Any(a => a.ParentID == item.GroupID))
                                        {
                                            <ul class="">
                                                @foreach (var subitem in grouplist.Where(a => a.ParentID == item.GroupID))
                                                {
                                                    <li>
                                                        <input type="checkbox" name="selectgroups" value="@subitem.GroupID"/><span>@subitem.GroupTitle</span>
                                                    </li>


                                                }
                                            </ul>
                                        }

                                    </li>

                                }
                            </ul>
                        }*@
                </div>

            </div>

        </div>
    }
</div>


<div>
    @Html.ActionLink("بازگشت به لیست", "Index")
</div>


@section Scripts
{

    <script>
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgPre').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#ImageUploader").change(function () {
            readURL(this);
        });



    </script>
    <script src="~/ckeditor/ckeditor.js"></script>
    <script src="~/ckeditor/adapters/jquery.js"></script>
    <script>
        $(function () {
            $('#Text').ckeditor();
        });
    </script>


}
